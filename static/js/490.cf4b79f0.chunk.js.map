{"version":3,"file":"static/js/490.cf4b79f0.chunk.js","mappings":"8NAOMA,EAAYC,EAAAA,GAAAA,IAAH,6IAOTC,EAAKD,EAAAA,GAAAA,GAAH,8CA2HR,UArHkB,WACf,IAAOE,GAAaC,EAAAA,EAAAA,KAAbD,UACDE,GAAUC,EAAAA,EAAAA,MA+Bf,OACA,UAACN,EAAD,YACA,SAACE,EAAD,4BAEI,UAAC,IAAD,CACIK,KAAK,QACLC,SAAU,CACNC,KAAM,GAEVC,WAAY,CACRD,KAAM,IAKVE,SA5CS,SAAAC,GACbC,QAAQC,IAAI,WAAYF,GACxBT,EAAUY,YAAYH,EAAOI,UAC7Bb,EAAUc,YAAYL,EAAOM,UAC7Bf,EAAUgB,QACTC,MAAK,WAEFC,EAAAA,GAAAA,QAAgB,4BAChBhB,EAAQiB,KAAK,QACdC,OAAM,WAELF,EAAAA,GAAAA,QAAgB,gCAkChBG,eA9Be,SAACC,GACpBZ,QAAQC,IAAI,UAAWW,IA8BnBC,aAAa,MAbjB,WAeI,SAAC,SAAD,CACIC,MAAM,qBACNpB,KAAK,WACLqB,MAAO,CACH,CACIC,UAAU,EACVR,QAAS,qDAEb,CACIS,UAtCI,SAACC,EAAKC,GAC3B,MAAG,KAAKC,KAAKD,GAAgBE,QAAQC,OAAO,gEACzCH,EAAMI,OAAS,GAAKJ,EAAMI,OAAS,GAAWF,QAAQC,OAAO,4CAC1DD,QAAQG,aA0BT,UAaI,SAAC,IAAD,OAGJ,SAAC,SAAD,CACIV,MAAM,eACNpB,KAAK,WACLqB,MAAO,CACH,CACIC,UAAU,EACVR,QAAS,+CAEb,CACEiB,IAAI,EACLjB,QAAQ,mCAET,CACGkB,IAAI,GACJlB,QAAQ,qCAdnB,UAmBI,SAAC,aAAD,OAgBJ,SAAC,SAAD,CACIX,WAAY,CACR8B,OAAQ,GACR/B,KAAM,IAHd,UAMI,SAAC,IAAD,CAAQgC,KAAK,UAAUC,SAAS,SAAhC","sources":["pages/Login.js"],"sourcesContent":["import React from \"react\";\r\nimport { Form, Input, Button,message } from 'antd';\r\nimport styled from 'styled-components';\r\nimport {useStores} from '../stores';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst Container = styled.div`\r\nmax-width:600px;\r\nbox-shadow:2px 2px 4px 0 rgba(0, 0, 0, 0.2);\r\nborder-radius:8px;\r\npadding:20px;\r\nmargin:30px auto\r\n`\r\nconst H1 = styled.h1`\r\ntext-align:center;\r\n\r\n`\r\n\r\n\r\nconst Component = () => {\r\n   const {AuthStore} = useStores();\r\n   const history = useHistory()\r\n\r\n    const onFinish = values => {\r\n        console.log('Success:', values);\r\n        AuthStore.setUsername(values.Username);  //首字母大写\r\n        AuthStore.setPassword(values.password);\r\n        AuthStore.login()\r\n        .then(() => {\r\n            //console.log('登录成功')\r\n            message.success('登录成功')\r\n            history.push('/')\r\n        }).catch(() => {\r\n           // console.log('登录失败')\r\n            message.warning('登录失败');\r\n        });\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n  \r\n   const validateUsername = (rule,value) => {  //rule表示自带的规则\r\n       if(/\\W/.test(value))  return Promise.reject('只能是字母数字下划线');\r\n       if(value.length < 4 || value.length > 10) return Promise.reject('长度为4~10个字符')\r\n     return  Promise.resolve();\r\n   }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n    <Container>\r\n    <H1>登录</H1>\r\n\r\n        <Form\r\n            name=\"basic\"\r\n            labelCol={{\r\n                span: 5,\r\n            }}\r\n            wrapperCol={{\r\n                span: 16,\r\n            }}\r\n            // initialValues={{\r\n            //     remember: true,\r\n            // }}\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n            autoComplete=\"off\"\r\n        >\r\n            <Form.Item\r\n                label=\"用户名\"\r\n                name=\"Username\"\r\n                rules={[\r\n                    {\r\n                        required: true,  //表示必须输入，否者就提示下面的msg\r\n                        message: '请输入你的用户名!',\r\n                    },\r\n                    {\r\n                        validator:validateUsername   //验证用户名，自己加规则\r\n                    }\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                label=\"密码\"\r\n                name=\"password\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: '请输入你的密码!',\r\n                    },\r\n                    {\r\n                      min:4,\r\n                     message:'最少4个字符'   //添加规则\r\n                    },\r\n                    {\r\n                       max:10,\r\n                       message:'最多10个字符' \r\n                    }\r\n\r\n                ]}\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n\r\n\r\n\r\n            {/* <Form.Item\r\n                name=\"remember\"\r\n                valuePropName=\"checked\"\r\n                wrapperCol={{\r\n                    offset: 8,\r\n                    span: 16,\r\n                }}\r\n            >\r\n                <Checkbox>Remember me</Checkbox>\r\n            </Form.Item> */}\r\n\r\n            <Form.Item\r\n                wrapperCol={{\r\n                    offset: 11,\r\n                    span: 16,\r\n                }}\r\n            >\r\n                <Button type=\"primary\" htmlType=\"submit\">提交</Button>\r\n            </Form.Item>\r\n        </Form>\r\n\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Component;"],"names":["Container","styled","H1","AuthStore","useStores","history","useHistory","name","labelCol","span","wrapperCol","onFinish","values","console","log","setUsername","Username","setPassword","password","login","then","message","push","catch","onFinishFailed","errorInfo","autoComplete","label","rules","required","validator","rule","value","test","Promise","reject","length","resolve","min","max","offset","type","htmlType"],"sourceRoot":""}