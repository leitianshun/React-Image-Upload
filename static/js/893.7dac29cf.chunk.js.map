{"version":3,"file":"static/js/893.7dac29cf.chunk.js","mappings":"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","sources":["components/Uploader.js","components/Tips.js","pages/Home.js"],"sourcesContent":["import React, { useRef,useEffect } from 'react';\r\nimport { useStores } from '../stores';\r\nimport { observer } from 'mobx-react'\r\nimport { Upload, message,Spin } from 'antd';\r\nimport { InboxOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { useLocalStore } from 'mobx-react';\r\n\r\nconst Res = styled.div`\r\nmargin-top:40px;\r\nborder:1px dashed  black; \r\npadding:20px;\r\n`;\r\n\r\nconst H1 = styled.h1`\r\ntext-align:center;\r\n`;\r\nconst Img = styled.img`\r\nmax-width:400px;\r\n`\r\n\r\nconst { Dragger } = Upload;\r\nconst Component = observer(() => {   //observer观察组件的变化\r\n    // const inputRef = useRef()  //创建指针\r\n     const { ImageStore,UserStore} = useStores()\r\n    const ref1 = useRef()\r\n    const ref2 = useRef()\r\n   \r\n    const bindWidth = () => {\r\n     store.setWidth(ref1.current.value) \r\n    }\r\n\r\n   const bindHeight = () => {\r\n    store.setHeight(ref2.current.value) \r\n\r\n   }\r\n\r\n     const store = useLocalStore(()=> ({\r\n         width:null,\r\n         setWidth(width){\r\n         store.width = width\r\n         },\r\n         \r\n         get widthStr(){\r\n           return  store.width ? `/w/${store.width}`:'';\r\n         },\r\n         height:null,\r\n         setHeight(height){\r\n            store.height = height\r\n            },\r\n        get heightStr(){\r\n            return store.height ? `/h/${store.height}`:'';\r\n        },\r\n        get fullStr(){\r\n            return ImageStore.serverFile.attributes.url.attributes.url + '?imageView2/0' + store.widthStr + store.heightStr\r\n        }\r\n     }));\r\n\r\n    const props = {\r\n        showUploadList:false,\r\n        beforeUpload:file => {\r\n        console.log(file)\r\n            ImageStore.setFile(file); //文件\r\n        ImageStore.setFilename(file.name)  //文件名\r\n        if(UserStore.currentUser === null) {   //没登录的状态下上传提示登录\r\n            message.warning('请登录后在上传')\r\n            return false;   //return false后点击上传，不会自动上传，下面的上传就不会执行\r\n        }\r\n        window.File = file\r\n       if(!/(svg$)|(png$)|(jpg$)|(jpeg$)|(gif$)/ig.test(file.type)){  //格式判断\r\n           message.error('只能上传png/svg/jpg/gif格式的图片')\r\n           return false;\r\n       }\r\n       if(file.size > 1024*1024){   //图片大小判断\r\n           message.error('图片最大1M')\r\n       }\r\n        ImageStore.upload().then((serverFile) => {\r\n            console.log('上传成功')\r\n            \r\n            console.log(serverFile)\r\n        }).catch(() => {\r\n            console.log('上传失败')\r\n        })\r\n            return false;  //手动上传\r\n        }\r\n    }\r\n\r\n    // const bindInput = () => {\r\n    //     console.log(inputRef.current)\r\n        // if (inputRef.current.files.length > 0)\r\n        //     ImageStore.setFile(inputRef.current.files[0]); //文件\r\n        // ImageStore.setFilename(inputRef.current.files[0].name)  //文件名\r\n        // ImageStore.upload().then((serverFile) => {\r\n        //     console.log('上传成功')\r\n        //     console.log(serverFile)\r\n        // }).catch(() => {\r\n        //     console.log('上传失败')\r\n        // })\r\n    // }\r\n    useEffect(() => {\r\n        if(!UserStore.currentUser){\r\n          message.warning('请登录后操作');\r\n        }\r\n      }, []);\r\n    return (\r\n        <div>\r\n            {/* <h1>文件上传</h1>\r\n         <input type=\"file\" onChange={bindInput}  ref={inputRef} />   */}\r\n           <Spin tip=\"上传中\" spinning={ImageStore.isUpoading}>   {/*图片上传加载loding */}\r\n            <Dragger {...props}>\r\n                <p className=\"ant-upload-drag-icon\">\r\n                    <InboxOutlined />\r\n                </p>\r\n                <p className=\"ant-upload-text\">点击或者拖拽上传图片</p>\r\n                <p className=\"ant-upload-hint\">\r\n                <a>  仅支持.png/.svg/.jpg/.gif/.jpeg格式的图片,图片最大1M </a> \r\n                </p>\r\n            </Dragger>\r\n            </Spin>\r\n            {\r\n                ImageStore.serverFile ?  <Res>\r\n                <H1>上传结果</H1>\r\n                <dl>\r\n                    <dt>线上地址</dt>\r\n                    <dd><a target=\"_blank\" href={ImageStore.serverFile.attributes.url.attributes.url}>{ImageStore.serverFile.attributes.url.attributes.url} </a></dd>\r\n                   <dt>文件名</dt>\r\n                   <dd>{ImageStore.filename}</dd>\r\n                   <dt>图片预览</dt>\r\n                   <dd>\r\n                       <Img src={ImageStore.serverFile.attributes.url.attributes.url}></Img>\r\n                   </dd>\r\n                   <dt>更多尺寸</dt>\r\n                   <dd>\r\n                       <input ref={ref1}  onChange={bindWidth} placeholder='最大宽度(可选)' />\r\n                       <input ref={ref2} onChange={bindHeight} placeholder='最大高度(可选)' />\r\n                   </dd>\r\n                   <dd>\r\n                     设置后的图片地址:   <a target=\"_blank\" href={store.fullStr} >{store.fullStr} </a>\r\n                  \r\n                   </dd>\r\n                </dl>\r\n                </Res> :null\r\n            }\r\n        </div>\r\n    );\r\n})\r\nexport default Component;","import React from 'react';\r\nimport { useStores } from '../stores';\r\nimport {observer} from 'mobx-react'\r\nimport styled from 'styled-components'\r\n\r\nconst Tips = styled.div`\r\nbackground:rgb(91, 194, 241);\r\nmargin:30px 0;\r\nborder-radius:6px;\r\npadding:10px;\r\ncolor:#fff;\r\n`\r\n\r\nconst Component = observer(({children}) => {\r\n    const {UserStore} = useStores()\r\n    return (\r\n        <>\r\n     \r\n        {  UserStore.currentUser ? null :    <Tips>{children}</Tips>\r\n\r\n        }\r\n        </>\r\n    );\r\n})\r\n\r\nexport default Component;","import React from \"react\";\r\nimport {observer} from 'mobx-react';\r\nimport {useStores} from '../stores'\r\nimport  Uploader  from \"../components/Uploader\";\r\nimport Tips from '../components/Tips';\r\n\r\n\r\nconst Home = observer(() => {\r\n  const {UserStore} = useStores();\r\n\r\n \r\n\r\n\r\n    return (\r\n     <>\r\n     {\r\n       UserStore.currentUser ? \r\n       <>  <h1> Hello {UserStore.currentUser.attributes.username} </h1>\r\n       </> :  <div>\r\n         <h1>Image Upload</h1>\r\n         <Tips>请先登录后操作</Tips> \r\n         </div> \r\n     }\r\n     <Uploader />\r\n     </>\r\n    );\r\n})\r\nexport default Home;"],"names":["Res","styled","H1","Img","Dragger","Upload","observer","useStores","ImageStore","UserStore","ref1","useRef","ref2","store","useLocalStore","width","setWidth","widthStr","height","setHeight","heightStr","fullStr","serverFile","attributes","url","props","showUploadList","beforeUpload","file","console","log","setFile","setFilename","name","currentUser","message","window","File","test","type","size","upload","then","catch","useEffect","tip","spinning","isUpoading","className","InboxOutlined","target","href","filename","src","ref","onChange","current","value","placeholder","Tips","children","username","Uploader"],"sourceRoot":""}